{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0TAgCeA,MA3Bf,YAAwD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAG5C,OAAO,yBAAKC,UAAU,SACpB,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACb,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBACXD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKD,EAAOL,UAAU,kBAAkBI,OAGhD,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAE,KAA/C,UCwCSC,G,kNApDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEASAC,IAAMC,IAAI,yDATV,gBAOCJ,EAPD,EAMRK,KACEA,KAAOL,OAMX,EAAKM,SAAS,CAACN,SAAQD,WAAW,IAbxB,2C,kEAkBRQ,KAAKN,c,+BAGC,IAAD,EACqBM,KAAKT,MAA1BC,EADA,EACAA,UAAWC,EADX,EACWA,OAClB,OAAO,6BAASX,UAAU,aACvBU,EAED,yBAAKV,UAAU,UACb,0BAAMA,UAAU,gBAAhB,cAGF,yBAAKA,UAAU,UACZW,EAAOR,KAAI,SAAAgB,GACV,OAAO,kBAAC,EAAD,CAAOb,IAAKa,EAAMC,GACjBA,GAAID,EAAMC,GACVzB,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAME,mBACdtB,OAAQoB,EAAMpB,kB,GA5CduB,IAAMC,YCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6acda59b.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Movie.css'\r\n\r\n// React state를 사용하지 않으면 굳이 class component로 할 필요없다. 고로 function component로 한다.\r\nfunction Movie({year, title, summary, poster, genres}) {\r\n  // return 하는 것은 jsx이다. jsx에서 html에서와 같이 'class'를 사용하면 콘솔 오류 발생한다. jsx에서는 'class' 대신 'className'을 사용한다.\r\n  // 'class' 말고도 <label>의 'for'와 같이 javascript와 겹치는 네임은 jsx에서 그대로 쓸 수 없다.\r\n  return <div className=\"movie\">\r\n    <img src={poster} alt={title} title={title} />\r\n    <div className=\"movie__data\">\r\n      <h3 className=\"movie__title\">{title}</h3>\r\n      <h5 className=\"movie__yaer\">{year}</h5>\r\n      <ul className=\"movie__genres\">\r\n        {genres.map((genre, index) => (\r\n          <li key={index} className=\"genrens__genre\">{genre}</li>\r\n        ))}\r\n      </ul>\r\n      <p className=\"movie__summary\">{summary.slice(0,180)}...</p>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie","import React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie'\nimport './App.css'\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  }\n  // 비동기\n  getMovies = async() => {\n    // await 은 async가 있을때만 쓰인다.\n    // async = 이건 좀 시간이 걸리니 기다려줘.\n    // 무엇을?\n    // await이 앞에있는 axios를.\n    const {\n      data: {\n        data: {movies}\n      }\n    } = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=rating\")\n    // console.log(movies)\n    \n    // 같은 코드 : this.setState({movies}) = this.setState({movies: movies})\n    this.setState({movies, isLoading: false})\n  } \n  componentDidMount() {\n    // setTimeout(() => {\n      // this.setState({isLoading: false})\n      this.getMovies();\n    // }, 6000)\n  }\n  render() {\n    const {isLoading, movies} = this.state\n    return <section className=\"container\">\n      {isLoading\n      ?\n      <div className=\"loader\">\n        <span className=\"loader__text\">Loading..</span>\n      </div>\n      :\n      <div className=\"movies\">\n        {movies.map(movie => {\n          return <Movie key={movie.id}\n                  id={movie.id}\n                  year={movie.year}\n                  title={movie.title}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n                  genres={movie.genres}\n                  />\n        })}  \n      </div>\n      }\n    </section>\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}